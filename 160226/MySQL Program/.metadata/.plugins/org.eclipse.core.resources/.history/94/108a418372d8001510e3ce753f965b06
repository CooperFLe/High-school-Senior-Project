import java.nio.charset.StandardCharsets;
import java.security.NoSuchAlgorithmException;
import java.security.spec.InvalidKeySpecException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import javax.swing.JDialog;
import javax.swing.JLabel;

import net.miginfocom.swing.MigLayout;
//import java.util.Arrays;

public class Connector 
{
	Connection conn;
	Statement statement;
	ResultSet result;
	Login login;
	JDialog dialog;
	public Connector(){
		dialog = new JDialog();
		dialog.setLocationRelativeTo(null);
		dialog.setSize(175,100);
		dialog.setLayout(new MigLayout("fill, wrap 1"));
		dialog.add(new JLabel("Connecting to server"));
		conn = connect();
		try {
			statement = conn.createStatement();
		} catch (SQLException e) {
			Popup.errorMessage(e);
		}
	}
	
	public Connector(Login login)
	{	
		dialog = new JDialog();
		dialog.setLocationRelativeTo(null);
		dialog.setSize(175,100);
		dialog.setLayout(new MigLayout("fill, wrap 1"));
		dialog.add(new JLabel("Connecting to server"));
		conn = connect();
		this.login = login;
	}
	
	void login() 
	{
		try
		{
			conn = connect();
			statement = conn.createStatement();
			if(!verifyUser(login))
				Popup.errorMessage("Login failed");
		}
		catch(Exception e)
		{
			Popup.errorMessage(e);
		}		
	}
	
	Statement getStatement()
	{
		return statement;
	}
	
	private boolean verifyUser(Login userLogin) {
		String user = userLogin.getUser();
		try {
			result = statement.executeQuery("SELECT user FROM users");
			while(result.next())
			{
				//System.out.println(result.getString(1));
				if(result.getString(1).equalsIgnoreCase(user))
					return verifyPass(userLogin);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		return false;
	}
	
	private boolean verifyPass(Login userLogin)
	{
		String salt = null;
		String pass = null;
		try {
			result = statement.executeQuery("SELECT salt FROM users WHERE user = '" + userLogin.getUser() + "'");
				result.next();
				salt = result.getString(1);
			result = statement.executeQuery("SELECT password FROM users WHERE user = '" + userLogin.getUser() + "'");
				result.next();
				pass = result.getString(1);
//			Debugging hashing			
//			System.out.println("Salt: " + Arrays.toString(salt.getBytes(StandardCharsets.UTF_8)));
//			System.out.println("Pass: " + Arrays.toString(pass.getBytes(StandardCharsets.UTF_8)));

				return PasswordEncryptionService.authenticate(userLogin.getPass(), 
							pass.getBytes(StandardCharsets.UTF_8), salt.getBytes(StandardCharsets.UTF_8));
				
		} catch (SQLException e) {
			e.printStackTrace();
		} catch (NoSuchAlgorithmException e) {
			e.printStackTrace();
		} catch (InvalidKeySpecException e) {
			e.printStackTrace();
		}
		
		return false;
	}

	public Connection connect()
	{
		try
		{
			dialog.setVisible(true);
			Connection c = DriverManager.getConnection("jdbc:mysql://" + Data.getIpaddress() + ":" + Data.getPortNum() + "/" 	
														+ Data.getDatabase(),Data.getUsername(),Data.getPassword());

			dialog.setVisible(false);
			return c;
		}catch(Exception e)
		{
			Popup.errorMessage(e);
			login();
		}
		
		
		return null;		
	}
	
	public Connection getConn(){return conn;}
}

